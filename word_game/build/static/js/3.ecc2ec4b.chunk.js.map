{"version":3,"sources":["mainScreen/TopScore.jsx","mainScreen/UserStats.jsx","loggedIn/User.js","guest/GuestTab.js","mainScreen/MainScreen.js","components/statsChart.jsx","components/statsChartWrapper.jsx"],"names":["TopScore","_ref","gameName","score","percent","gamesData","word","name","unit","path","number","reaction","react_default","a","createElement","className","react_router_dom","to","concat","memo","user","_useState","useState","_useState2","Object","slicedToArray","selectedGame","setGame","_useState3","_useState4","scores","setScores","_useState5","_useState6","currentScore","setCurrent","useEffect","axios","get","process","withCredentials","then","res","scoreArr","scorePercent","data","key","push","catch","error","console","log","onChange","event","target","value","mainScreen_TopScore","statsChartWrapper","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_mainScreen_UserStats_jsx__WEBPACK_IMPORTED_MODULE_1__","id","UserStats","MainScreen","loggedIn","User","guest_GuestTab","statsChart","width","es6","height","type","dataKey","stroke","chartWidth","setChartWidth","containerRef","useRef","useLayoutEffect","changeWidth","current","clientWidth","window","addEventListener","removeEventListener","ref","components_statsChart"],"mappings":"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","file":"static/js/3.ecc2ec4b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst TopScore = ({ gameName, score, percent }) => {\r\n    const gamesData = {\r\n        word: { name: \"Word Memory\", unit: \"words\", path: \"wordgame\" },\r\n        number: { name: \"Number Memory\", unit: \"digits\", path: \"numbergame\" },\r\n        reaction: { name: \"Reaction Time\", unit: \"ms\", path: \"reactiongame\" }\r\n    }\r\n    return (\r\n        <div className={\"topScore textCenter card\"}>\r\n            <h3 className=\"statsHeader\">{gamesData[gameName].name}</h3>\r\n            <div>\r\n                <h1>{score || \"NO SCORE\"}</h1>\r\n                <p>{gamesData[gameName].unit}</p>\r\n                <p>Top <strong>{percent || \"? \"}%</strong></p>\r\n            </div>\r\n            <Link className=\"mainButton undecoratedLink\" to={`/games/${gamesData[gameName].path}`}>\r\n                PLAY\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopScore\r\n","import React, {useState, useEffect, memo} from 'react'\r\nimport TopScore from './TopScore.jsx';\r\nimport StatsChart from '../components/statsChartWrapper.jsx';\r\nimport axios from 'axios'\r\nconst BASEURL = process.env.REACT_APP_BE_URL;\r\n\r\n\r\nconst UserStats = ({user}) => {\r\n    const [selectedGame, setGame]=useState(\"word\")\r\n    const [scores, setScores]=useState([])\r\n    const [currentScore, setCurrent]=useState({score: 0, percent: 0})\r\n    useEffect(() => {\r\n        axios.get(`${BASEURL}/getstats/${selectedGame}`, {withCredentials: true}).then(res => {\r\n            let scoreArr = []\r\n            const score=user && user.scores[selectedGame]? user.scores[selectedGame] : 0;\r\n            const scorePercent=score? res.data[score] : null; \r\n            setCurrent({score: score, percent:  scorePercent})\r\n            for (let key in res.data) {\r\n                scoreArr.push({\r\n                    score: key,\r\n                    percent: res.data[key]\r\n                })\r\n            }\r\n            setScores(scoreArr)\r\n        }).catch((error)=>console.log(\"looks like the server is offline\"))\r\n    }, [selectedGame])\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"userStatsWrapper\">\r\n            <select onChange={(event)=>setGame(event.target.value)}>\r\n                <option value=\"word\">word memory</option>\r\n                <option value=\"number\">number memory</option>\r\n                <option value=\"reaction\">reaction time</option>\r\n            </select>\r\n            <TopScore score={currentScore.score} percent={currentScore.percent} gameName={selectedGame}/>\r\n            <StatsChart scores={scores}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(UserStats)\r\n","import React, {memo} from 'react'\r\nimport UserStats from '../mainScreen/UserStats.jsx';\r\n\r\n\r\n\r\n\r\nconst User = ({user}) => {\r\n  return (\r\n    <div id=\"guestStatsView\" className=\"statsView\">\r\n      <div className={\"welcomeUser centerAll textUpper\"}>\r\n        <h2>WELCOME {user.name}</h2>\r\n      </div>\r\n      <UserStats user={user}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(User)\r\n","import React, {memo} from 'react';\r\nimport UserStats from '../mainScreen/UserStats.jsx';\r\n\r\n\r\nconst GuestTab = ({user}) => {\r\n    return (\r\n        <div id=\"guestStatsView\" className=\"statsView\">\r\n            <div className={\"welcomeUser centerAll textUpper\"}>\r\n                <h2>WELCOME GUEST</h2>\r\n            </div>\r\n            <UserStats user={user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(GuestTab)\r\n","import React from 'react'\r\nimport GuestScreen from '../guest/GuestTab.js'\r\nimport User from '../loggedIn/User.js';\r\n\r\n\r\n\r\nconst MainScreen = ({loggedIn, user}) => {\r\n  return (\r\n    <div className={'maxWidth60 mainScreen'}>\r\n      {loggedIn?\r\n        <User user={user}/>:\r\n        <GuestScreen user={user}/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainScreen\r\n\r\n","import React from 'react'\r\nimport { AreaChart, Area, /* Line, */ CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\n\r\nconst statsChart = ({data, width}) => {\r\n    return (\r\n        <AreaChart width={width || 500} height={300} data={data}>\r\n            <Area type=\"monotone\" dataKey=\"percent\" stroke=\"#8884d8\" />\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis dataKey=\"score\" />\r\n            <YAxis/>\r\n            <Tooltip />\r\n        </AreaChart>\r\n    )\r\n}\r\n\r\nexport default statsChart\r\n","import React, { useState, useLayoutEffect, useRef } from 'react'\r\nimport StatsChart from './statsChart.jsx';\r\n\r\nconst statsChartWrapper = ({ scores }) => {\r\n    const [chartWidth, setChartWidth] = useState(null);\r\n    const containerRef = useRef();\r\n\r\n    useLayoutEffect(() => {\r\n        const changeWidth=()=>setChartWidth(containerRef.current.clientWidth)\r\n        changeWidth()\r\n        window.addEventListener(\"resize\",changeWidth)\r\n        return () => {\r\n            window.removeEventListener(\"resize\", changeWidth);\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div ref={containerRef} id=\"dashboardChart\"  className={\"statsWrapperOuter\"}>\r\n            <div className={\"statsWrapperInner\"}>\r\n                {chartWidth && <StatsChart data={scores} width={chartWidth} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default statsChartWrapper\r\n"],"sourceRoot":""}